{
 "Description": "Blueprints tracking (qs-1s1r465hk)",
 "Resources": {
  "testuseast1blueprintvpcDE5DE960": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/Resource"
   }
  },
  "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.0.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet1/Subnet"
   }
  },
  "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet1/RouteTable"
   }
  },
  "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE"
    },
    "SubnetId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "testuseast1blueprintvpcIGW45607E32"
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet1/EIP"
   }
  },
  "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet1/NATGateway"
   }
  },
  "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.32.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet2/Subnet"
   }
  },
  "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet2/RouteTable"
   }
  },
  "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F"
    },
    "SubnetId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "testuseast1blueprintvpcIGW45607E32"
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "testuseast1blueprintvpcPublicSubnet2EIP929BC440": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet2/EIP"
   }
  },
  "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet2"
     }
    ]
   },
   "DependsOn": [
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet2/NATGateway"
   }
  },
  "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "AvailabilityZone": "us-east-1c",
    "CidrBlock": "10.0.64.0/19",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet3/Subnet"
   }
  },
  "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet3/RouteTable"
   }
  },
  "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4"
    },
    "SubnetId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet3/RouteTableAssociation"
   }
  },
  "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "testuseast1blueprintvpcIGW45607E32"
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet3/DefaultRoute"
   }
  },
  "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet3/EIP"
   }
  },
  "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "SubnetId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2"
    },
    "AllocationId": {
     "Fn::GetAtt": [
      "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
      "AllocationId"
     ]
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet3"
     }
    ]
   },
   "DependsOn": [
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PublicSubnet3/NATGateway"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "AvailabilityZone": "us-east-1a",
    "CidrBlock": "10.0.96.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet1/Subnet"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet1/RouteTable"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7"
    },
    "SubnetId": {
     "Ref": "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "AvailabilityZone": "us-east-1b",
    "CidrBlock": "10.0.128.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet2/Subnet"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet2"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet2/RouteTable"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04"
    },
    "SubnetId": {
     "Ref": "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "AvailabilityZone": "us-east-1c",
    "CidrBlock": "10.0.160.0/19",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet3/Subnet"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "Tags": [
     {
      "Key": "kubernetes.io/role/internal-elb",
      "Value": "1"
     },
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet3"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet3/RouteTable"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF"
    },
    "SubnetId": {
     "Ref": "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet3/RouteTableAssociation"
   }
  },
  "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "RouteTableId": {
     "Ref": "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF"
    },
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/PrivateSubnet3/DefaultRoute"
   }
  },
  "testuseast1blueprintvpcIGW45607E32": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/IGW"
   }
  },
  "testuseast1blueprintvpcVPCGW870ACB79": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    },
    "InternetGatewayId": {
     "Ref": "testuseast1blueprintvpcIGW45607E32"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-vpc/VPCGW"
   }
  },
  "testuseast1blueprintkmskeyADFD49DE": {
   "Type": "AWS::KMS::Key",
   "Properties": {
    "KeyPolicy": {
     "Statement": [
      {
       "Action": "kms:*",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::643824552215:root"
          ]
         ]
        }
       },
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "Key for EKS Cluster 'test-us-east-1-blueprint'"
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint-kms-key/Resource"
   }
  },
  "kubectllayer2595F4425A": {
   "Type": "AWS::Lambda::LayerVersion",
   "Properties": {
    "Content": {
     "S3Bucket": "cdk-hnb659fds-assets-643824552215-us-east-1",
     "S3Key": "ebc48a9a74e277f463f78c5a0b3bcf489a891efe25ece75b5b439b9e89bee4ac.zip"
    },
    "Description": "/opt/kubectl/kubectl 1.25; /opt/helm/helm 3.11",
    "LicenseInfo": "Apache-2.0"
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/kubectllayer25/Resource",
    "aws:asset:path": "../asset.ebc48a9a74e277f463f78c5a0b3bcf489a891efe25ece75b5b439b9e89bee4ac.zip",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Content"
   }
  },
  "testuseast1blueprintRoleC47CCA79": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "eks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSClusterPolicy"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/Role/Resource"
   }
  },
  "testuseast1blueprintControlPlaneSecurityGroupCDD0BA86": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "EKS Control Plane Security Group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "testuseast1blueprintvpcDE5DE960"
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/ControlPlaneSecurityGroup/Resource"
   }
  },
  "testuseast1blueprintCreationRoleBA0F17CF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::643824552215:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/Resource/CreationRole/Resource"
   }
  },
  "testuseast1blueprintCreationRoleDefaultPolicy8A0EFDC1": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iam:PassRole",
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "testuseast1blueprintRoleC47CCA79",
         "Arn"
        ]
       }
      },
      {
       "Action": [
        "eks:CreateCluster",
        "eks:DescribeCluster",
        "eks:DescribeUpdate",
        "eks:DeleteCluster",
        "eks:UpdateClusterVersion",
        "eks:UpdateClusterConfig",
        "eks:CreateFargateProfile",
        "eks:TagResource",
        "eks:UntagResource"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":eks:us-east-1:643824552215:cluster/test-us-east-1-blueprint"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":eks:us-east-1:643824552215:cluster/test-us-east-1-blueprint/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "eks:DescribeFargateProfile",
        "eks:DeleteFargateProfile"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":eks:us-east-1:643824552215:fargateprofile/test-us-east-1-blueprint/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "iam:GetRole",
        "iam:listAttachedRolePolicies"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "iam:CreateServiceLinkedRole",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ec2:DescribeInstances",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeSubnets",
        "ec2:DescribeRouteTables",
        "ec2:DescribeDhcpOptions",
        "ec2:DescribeVpcs"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "kms:Encrypt",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:CreateGrant"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "testuseast1blueprintkmskeyADFD49DE",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "testuseast1blueprintCreationRoleDefaultPolicy8A0EFDC1",
    "Roles": [
     {
      "Ref": "testuseast1blueprintCreationRoleBA0F17CF"
     }
    ]
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/Resource/CreationRole/DefaultPolicy/Resource"
   }
  },
  "testuseast1blueprint5D701BC1": {
   "Type": "Custom::AWSCDK-EKS-Cluster",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksClusterResourceProviderframeworkonEvent11BC7AFDArn"
     ]
    },
    "Config": {
     "name": "test-us-east-1-blueprint",
     "version": "1.25",
     "roleArn": {
      "Fn::GetAtt": [
       "testuseast1blueprintRoleC47CCA79",
       "Arn"
      ]
     },
     "encryptionConfig": [
      {
       "provider": {
        "keyArn": {
         "Fn::GetAtt": [
          "testuseast1blueprintkmskeyADFD49DE",
          "Arn"
         ]
        }
       },
       "resources": [
        "secrets"
       ]
      }
     ],
     "resourcesVpcConfig": {
      "subnetIds": [
       {
        "Ref": "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB"
       },
       {
        "Ref": "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7"
       },
       {
        "Ref": "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2"
       },
       {
        "Ref": "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F"
       },
       {
        "Ref": "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E"
       },
       {
        "Ref": "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430"
       }
      ],
      "securityGroupIds": [
       {
        "Fn::GetAtt": [
         "testuseast1blueprintControlPlaneSecurityGroupCDD0BA86",
         "GroupId"
        ]
       }
      ],
      "endpointPublicAccess": true,
      "endpointPrivateAccess": true
     }
    },
    "AssumeRoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "AttributesRevision": 2
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintCreationRoleDefaultPolicy8A0EFDC1",
    "testuseast1blueprintCreationRoleBA0F17CF"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/Resource/Resource/Default"
   }
  },
  "testuseast1blueprintKubectlReadyBarrierCBEAFCB1": {
   "Type": "AWS::SSM::Parameter",
   "Properties": {
    "Type": "String",
    "Value": "aws:cdk:eks:kubectl-ready"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintCreationRoleDefaultPolicy8A0EFDC1",
    "testuseast1blueprintCreationRoleBA0F17CF",
    "testuseast1blueprint5D701BC1"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/KubectlReadyBarrier"
   }
  },
  "testuseast1blueprintMastersRoleC7BAAEFF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":iam::643824552215:root"
          ]
         ]
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/MastersRole/Resource"
   }
  },
  "testuseast1blueprintAwsAuthmanifest5EB99E17": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"aws-auth\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8573ce2c9eb18b5920ede01cdffe819bceed0bad2\":\"\"}},\"data\":{\"mapRoles\":\"[{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintMastersRoleC7BAAEFF",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintMastersRoleC7BAAEFF",
         "Arn"
        ]
       },
       "\\\",\\\"groups\\\":[\\\"system:masters\\\"]},{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintNodegroupprimarymnggreenngNodeGroupRoleA3C6183B",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"system:node:{{EC2PrivateDNSName}}\\\",\\\"groups\\\":[\\\"system:bootstrappers\\\",\\\"system:nodes\\\"]},{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "teamplatformtestAccessRole1A18C529",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"platform-test\\\",\\\"groups\\\":[\\\"system:masters\\\"]},{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "ecsdemofrontendAccessRole633CF6FC",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"frontend-test\\\",\\\"groups\\\":[\\\"ecsdemo-frontend-team-group\\\"]},{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "ecsdemonodejsAccessRole83EFDD90",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"backend-nodejs-test\\\",\\\"groups\\\":[\\\"ecsdemo-nodejs-team-group\\\"]},{\\\"rolearn\\\":\\\"",
       {
        "Fn::GetAtt": [
         "ecsdemocrystalAccessRoleE9AD0BA8",
         "Arn"
        ]
       },
       "\\\",\\\"username\\\":\\\"backend-crystal-test\\\",\\\"groups\\\":[\\\"ecsdemo-crystal-team-group\\\"]}]\",\"mapUsers\":\"[]\",\"mapAccounts\":\"[]\"}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8573ce2c9eb18b5920ede01cdffe819bceed0bad2",
    "Overwrite": true
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/AwsAuth/manifest/Resource/Default"
   }
  },
  "testuseast1blueprintNodegroupprimarymnggreenngNodeGroupRoleA3C6183B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKSWorkerNodePolicy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEKS_CNI_Policy"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSXRayDaemonWriteAccess"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "k8s.io/cluster-autoscaler/eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/clusterName",
      "Value": "owned"
     },
     {
      "Key": "k8s.io/cluster-autoscaler/enabled",
      "Value": "true"
     }
    ]
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/Nodegroupprimary-mng-green-ng/NodeGroupRole/Resource"
   }
  },
  "testuseast1blueprintNodegroupprimarymnggreenngEA295D63": {
   "Type": "AWS::EKS::Nodegroup",
   "Properties": {
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "NodeRole": {
     "Fn::GetAtt": [
      "testuseast1blueprintNodegroupprimarymnggreenngNodeGroupRoleA3C6183B",
      "Arn"
     ]
    },
    "Subnets": [
     {
      "Ref": "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F"
     },
     {
      "Ref": "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E"
     },
     {
      "Ref": "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430"
     }
    ],
    "AmiType": "AL2_x86_64",
    "CapacityType": "SPOT",
    "ForceUpdateEnabled": true,
    "InstanceTypes": [
     "m5.xlarge",
     "m5a.xlarge",
     "m5ad.xlarge",
     "m5d.xlarge"
    ],
    "NodegroupName": "primary-mng-green",
    "ScalingConfig": {
     "DesiredSize": 1,
     "MaxSize": 100,
     "MinSize": 1
    },
    "Tags": {
     "k8s.io/cluster-autoscaler/eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/clusterName": "owned",
     "k8s.io/cluster-autoscaler/enabled": "true"
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/Nodegroupprimary-mng-green-ng/Resource"
   }
  },
  "testuseast1blueprintawsloadbalancercontrollerConditionJson6E5B832C": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "{\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":aud\":\"sts.amazonaws.com\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":sub\":\"system:serviceaccount:kube-system:aws-load-balancer-controller\"}"
      ]
     ]
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/aws-load-balancer-controller/ConditionJson/Resource/Default"
   }
  },
  "testuseast1blueprintawsloadbalancercontrollerRole4BE88D25": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "Fn::GetAtt": [
          "testuseast1blueprintawsloadbalancercontrollerConditionJson6E5B832C",
          "Value"
         ]
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": {
         "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/aws-load-balancer-controller/Role/Resource"
   }
  },
  "testuseast1blueprintawsloadbalancercontrollerRoleDefaultPolicyCE068F37": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "iam:CreateServiceLinkedRole",
       "Condition": {
        "StringEquals": {
         "iam:AWSServiceName": "elasticloadbalancing.amazonaws.com"
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ec2:DescribeAccountAttributes",
        "ec2:DescribeAddresses",
        "ec2:DescribeAvailabilityZones",
        "ec2:DescribeInternetGateways",
        "ec2:DescribeVpcs",
        "ec2:DescribeVpcPeeringConnections",
        "ec2:DescribeSubnets",
        "ec2:DescribeSecurityGroups",
        "ec2:DescribeInstances",
        "ec2:DescribeNetworkInterfaces",
        "ec2:DescribeTags",
        "ec2:GetCoipPoolUsage",
        "ec2:DescribeCoipPools",
        "elasticloadbalancing:DescribeLoadBalancers",
        "elasticloadbalancing:DescribeLoadBalancerAttributes",
        "elasticloadbalancing:DescribeListeners",
        "elasticloadbalancing:DescribeListenerCertificates",
        "elasticloadbalancing:DescribeSSLPolicies",
        "elasticloadbalancing:DescribeRules",
        "elasticloadbalancing:DescribeTargetGroups",
        "elasticloadbalancing:DescribeTargetGroupAttributes",
        "elasticloadbalancing:DescribeTargetHealth",
        "elasticloadbalancing:DescribeTags"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "cognito-idp:DescribeUserPoolClient",
        "acm:ListCertificates",
        "acm:DescribeCertificate",
        "iam:ListServerCertificates",
        "iam:GetServerCertificate",
        "waf-regional:GetWebACL",
        "waf-regional:GetWebACLForResource",
        "waf-regional:AssociateWebACL",
        "waf-regional:DisassociateWebACL",
        "wafv2:GetWebACL",
        "wafv2:GetWebACLForResource",
        "wafv2:AssociateWebACL",
        "wafv2:DisassociateWebACL",
        "shield:GetSubscriptionState",
        "shield:DescribeProtection",
        "shield:CreateProtection",
        "shield:DeleteProtection"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:RevokeSecurityGroupIngress"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "ec2:CreateSecurityGroup",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "ec2:CreateTags",
       "Condition": {
        "StringEquals": {
         "ec2:CreateAction": "CreateSecurityGroup"
        },
        "Null": {
         "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ec2:*:*:security-group/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ec2:CreateTags",
        "ec2:DeleteTags"
       ],
       "Condition": {
        "Null": {
         "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
         "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":ec2:*:*:security-group/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "ec2:AuthorizeSecurityGroupIngress",
        "ec2:RevokeSecurityGroupIngress",
        "ec2:DeleteSecurityGroup"
       ],
       "Condition": {
        "Null": {
         "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "elasticloadbalancing:CreateLoadBalancer",
        "elasticloadbalancing:CreateTargetGroup"
       ],
       "Condition": {
        "Null": {
         "aws:RequestTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "elasticloadbalancing:CreateListener",
        "elasticloadbalancing:DeleteListener",
        "elasticloadbalancing:CreateRule",
        "elasticloadbalancing:DeleteRule"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "elasticloadbalancing:AddTags",
        "elasticloadbalancing:RemoveTags"
       ],
       "Condition": {
        "Null": {
         "aws:RequestTag/elbv2.k8s.aws/cluster": "true",
         "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":elasticloadbalancing:*:*:targetgroup/*/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":elasticloadbalancing:*:*:loadbalancer/net/*/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":elasticloadbalancing:*:*:loadbalancer/app/*/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "elasticloadbalancing:AddTags",
        "elasticloadbalancing:RemoveTags"
       ],
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":elasticloadbalancing:*:*:listener/net/*/*/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":elasticloadbalancing:*:*:listener/app/*/*/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":elasticloadbalancing:*:*:listener-rule/net/*/*/*"
          ]
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           "arn:",
           {
            "Ref": "AWS::Partition"
           },
           ":elasticloadbalancing:*:*:listener-rule/app/*/*/*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "elasticloadbalancing:ModifyLoadBalancerAttributes",
        "elasticloadbalancing:SetIpAddressType",
        "elasticloadbalancing:SetSecurityGroups",
        "elasticloadbalancing:SetSubnets",
        "elasticloadbalancing:DeleteLoadBalancer",
        "elasticloadbalancing:ModifyTargetGroup",
        "elasticloadbalancing:ModifyTargetGroupAttributes",
        "elasticloadbalancing:DeleteTargetGroup"
       ],
       "Condition": {
        "Null": {
         "aws:ResourceTag/elbv2.k8s.aws/cluster": "false"
        }
       },
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "elasticloadbalancing:RegisterTargets",
        "elasticloadbalancing:DeregisterTargets"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":elasticloadbalancing:*:*:targetgroup/*/*"
         ]
        ]
       }
      },
      {
       "Action": [
        "elasticloadbalancing:SetWebAcl",
        "elasticloadbalancing:ModifyListener",
        "elasticloadbalancing:AddListenerCertificates",
        "elasticloadbalancing:RemoveListenerCertificates",
        "elasticloadbalancing:ModifyRule"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "testuseast1blueprintawsloadbalancercontrollerRoleDefaultPolicyCE068F37",
    "Roles": [
     {
      "Ref": "testuseast1blueprintawsloadbalancercontrollerRole4BE88D25"
     }
    ]
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/aws-load-balancer-controller/Role/DefaultPolicy/Resource"
   }
  },
  "testuseast1blueprintawsloadbalancercontrollermanifestawsloadbalancercontrollerServiceAccountResource2D4B98DA": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"aws-load-balancer-controller\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8873b5c38cb94136408e8655a6e88eb15f0a4e949\":\"\",\"app.kubernetes.io/name\":\"aws-load-balancer-controller\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintawsloadbalancercontrollerRole4BE88D25",
         "Arn"
        ]
       },
       "\"}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8873b5c38cb94136408e8655a6e88eb15f0a4e949"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/aws-load-balancer-controller/manifest-aws-load-balancer-controllerServiceAccountResource/Resource/Default"
   }
  },
  "testuseast1blueprintOpenIdConnectProviderDBAEF7AF": {
   "Type": "Custom::AWSCDKOpenIdConnectProvider",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0",
      "Arn"
     ]
    },
    "ClientIDList": [
     "sts.amazonaws.com"
    ],
    "Url": {
     "Fn::GetAtt": [
      "testuseast1blueprint5D701BC1",
      "OpenIdConnectIssuerUrl"
     ]
    },
    "CodeHash": "48e9fd6cee1d2c5f41da5c382b67d28876e6930ade034bffcfe0739f878fec68"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/OpenIdConnectProvider/Resource/Default"
   }
  },
  "testuseast1blueprintchartawsloadbalancercontrollerEACBAB2B": {
   "Type": "Custom::AWSCDK-EKS-HelmChart",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "Release": "aws-load-balancer-controller",
    "Chart": "aws-load-balancer-controller",
    "Version": "1.5.2",
    "Values": {
     "Fn::Join": [
      "",
      [
       "{\"clusterName\":\"",
       {
        "Ref": "testuseast1blueprint5D701BC1"
       },
       "\",\"serviceAccount\":{\"create\":false,\"name\":\"aws-load-balancer-controller\"},\"enableShield\":false,\"enableWaf\":false,\"enableWafv2\":false,\"createIngressClassResource\":true,\"ingressClass\":\"alb\",\"enableServiceMutatorWebhook\":false,\"region\":\"us-east-1\",\"image\":{\"repository\":\"602401143452.dkr.ecr.us-east-1.amazonaws.com/amazon/aws-load-balancer-controller\"},\"vpcId\":\"",
       {
        "Ref": "testuseast1blueprintvpcDE5DE960"
       },
       "\"}"
      ]
     ]
    },
    "Namespace": "kube-system",
    "Repository": "https://aws.github.io/eks-charts",
    "CreateNamespace": true
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintawsloadbalancercontrollerConditionJson6E5B832C",
    "testuseast1blueprintawsloadbalancercontrollermanifestawsloadbalancercontrollerServiceAccountResource2D4B98DA",
    "testuseast1blueprintawsloadbalancercontrollerRoleDefaultPolicyCE068F37",
    "testuseast1blueprintawsloadbalancercontrollerRole4BE88D25",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/chart-aws-load-balancer-controller/Resource/Default"
   }
  },
  "testuseast1blueprintchartblueprintscertmanageraddon72B0828E": {
   "Type": "Custom::AWSCDK-EKS-HelmChart",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "Release": "cert-manager",
    "Chart": "cert-manager",
    "Version": "1.11.2",
    "Values": "{\"installCRDs\":true}",
    "Namespace": "cert-manager",
    "Repository": "https://charts.jetstack.io",
    "CreateNamespace": true
   },
   "DependsOn": [
    "certmanagernamespacestruct65ED8E81",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintchartawsloadbalancercontrollerEACBAB2B",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/chart-blueprints-cert-manager-addon/Resource/Default"
   }
  },
  "testuseast1blueprintadotmanagedpolicyE27C1076": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "aps:RemoteWrite",
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "cloudwatch:PutMetricData",
        "ec2:DescribeVolumes",
        "ec2:DescribeTags",
        "logs:PutLogEvents",
        "logs:DescribeLogStreams",
        "logs:DescribeLogGroups",
        "logs:CreateLogStream",
        "logs:CreateLogGroup"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": "ssm:GetParameter",
       "Effect": "Allow",
       "Resource": "arn:aws:ssm:*:*:parameter/AmazonCloudWatch-*"
      },
      {
       "Action": [
        "xray:PutTraceSegments",
        "xray:PutTelemetryRecords",
        "xray:GetSamplingRules",
        "xray:GetSamplingTargets",
        "xray:GetSamplingStatisticSummaries"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "",
    "Path": "/"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/adot-managed-policy/Resource"
   }
  },
  "testuseast1blueprintadotcollectorsaConditionJson3A0BD841": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "{\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":aud\":\"sts.amazonaws.com\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":sub\":\"system:serviceaccount:default:adot-collector\"}"
      ]
     ]
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/adot-collector-sa/ConditionJson/Resource/Default"
   }
  },
  "testuseast1blueprintadotcollectorsaRole7720C6AD": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "Fn::GetAtt": [
          "testuseast1blueprintadotcollectorsaConditionJson3A0BD841",
          "Value"
         ]
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": {
         "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Ref": "testuseast1blueprintadotmanagedpolicyE27C1076"
     }
    ]
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/adot-collector-sa/Role/Resource"
   }
  },
  "testuseast1blueprintadotcollectorsamanifestadotcollectorsaServiceAccountResourceEFCBCBDD": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"adot-collector\",\"namespace\":\"default\",\"labels\":{\"aws.cdk.eks/prune-c8cef4fecddfdb1a40e3e5d1f979633e962a9fe502\":\"\",\"app.kubernetes.io/name\":\"adot-collector\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintadotcollectorsaRole7720C6AD",
         "Arn"
        ]
       },
       "\"}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8cef4fecddfdb1a40e3e5d1f979633e962a9fe502"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/adot-collector-sa/manifest-adot-collector-saServiceAccountResource/Resource/Default"
   }
  },
  "testuseast1blueprintchartSecretsStoreCSIDriver7B454069": {
   "Type": "Custom::AWSCDK-EKS-HelmChart",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "Release": "blueprints-addon-secret-store-csi-driver",
    "Chart": "secrets-store-csi-driver",
    "Version": "1.3.3",
    "Wait": true,
    "Timeout": "900s",
    "Values": "{\"grpcSupportedProviders\":\"aws\",\"syncSecret\":{\"enabled\":\"true\"}}",
    "Namespace": "kube-system",
    "Repository": "https://kubernetes-sigs.github.io/secrets-store-csi-driver/charts",
    "CreateNamespace": true
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/chart-SecretsStoreCSIDriver/Resource/Default"
   }
  },
  "testuseast1blueprintmanifestSecretsStoreCsiDriverProviderAws25025888": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"csi-secrets-store-provider-aws\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8eab62117fec694d4b04b48c014474726b0507f9d\":\"\"}}},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"name\":\"csi-secrets-store-provider-aws-cluster-role\",\"labels\":{\"aws.cdk.eks/prune-c8eab62117fec694d4b04b48c014474726b0507f9d\":\"\"}},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"serviceaccounts/token\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"\"],\"resources\":[\"serviceaccounts\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"nodes\"],\"verbs\":[\"get\"]}]},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"name\":\"csi-secrets-store-provider-aws-cluster-rolebinding\",\"labels\":{\"aws.cdk.eks/prune-c8eab62117fec694d4b04b48c014474726b0507f9d\":\"\"}},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"csi-secrets-store-provider-aws-cluster-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"csi-secrets-store-provider-aws\",\"namespace\":\"kube-system\"}]},{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"namespace\":\"kube-system\",\"name\":\"csi-secrets-store-provider-aws\",\"labels\":{\"aws.cdk.eks/prune-c8eab62117fec694d4b04b48c014474726b0507f9d\":\"\",\"app\":\"csi-secrets-store-provider-aws\"}},\"spec\":{\"updateStrategy\":{\"type\":\"RollingUpdate\"},\"selector\":{\"matchLabels\":{\"app\":\"csi-secrets-store-provider-aws\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"csi-secrets-store-provider-aws\"}},\"spec\":{\"serviceAccountName\":\"csi-secrets-store-provider-aws\",\"hostNetwork\":false,\"containers\":[{\"name\":\"provider-aws-installer\",\"image\":\"public.ecr.aws/aws-secrets-manager/secrets-store-csi-driver-provider-aws:1.0.r2-42-ga2fd202-2023.03.03.20.03\",\"imagePullPolicy\":\"Always\",\"args\":[\"--provider-volume=/etc/kubernetes/secrets-store-csi-providers\"],\"resources\":{\"requests\":{\"cpu\":\"50m\",\"memory\":\"100Mi\"},\"limits\":{\"cpu\":\"50m\",\"memory\":\"100Mi\"}},\"securityContext\":{\"privileged\":false,\"allowPrivilegeEscalation\":false},\"volumeMounts\":[{\"mountPath\":\"/etc/kubernetes/secrets-store-csi-providers\",\"name\":\"providervol\"},{\"name\":\"mountpoint-dir\",\"mountPath\":\"/var/lib/kubelet/pods\",\"mountPropagation\":\"HostToContainer\"}]}],\"volumes\":[{\"name\":\"providervol\",\"hostPath\":{\"path\":\"/etc/kubernetes/secrets-store-csi-providers\"}},{\"name\":\"mountpoint-dir\",\"hostPath\":{\"path\":\"/var/lib/kubelet/pods\",\"type\":\"DirectoryOrCreate\"}}],\"nodeSelector\":{\"kubernetes.io/os\":\"linux\"}}}}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8eab62117fec694d4b04b48c014474726b0507f9d"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintchartawsloadbalancercontrollerEACBAB2B",
    "testuseast1blueprintchartSecretsStoreCSIDriver7B454069",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/manifest-SecretsStoreCsiDriverProviderAws/Resource/Default"
   }
  },
  "testuseast1blueprintchartnginxingressE5A4AA79": {
   "Type": "Custom::AWSCDK-EKS-HelmChart",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "Release": "blueprints-addon-nginx",
    "Chart": "nginx-ingress",
    "Version": "0.17.1",
    "Values": "{\"controller\":{\"service\":{\"annotations\":{\"service.beta.kubernetes.io/aws-load-balancer-backend-protocol\":\"tcp\",\"service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled\":\"true\",\"service.beta.kubernetes.io/aws-load-balancer-scheme\":\"internet-facing\",\"service.beta.kubernetes.io/aws-load-balancer-type\":\"external\",\"service.beta.kubernetes.io/aws-load-balancer-nlb-target-type\":\"ip\"}}}}",
    "Namespace": "kube-system",
    "Repository": "https://helm.nginx.com/stable",
    "CreateNamespace": true
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintchartawsloadbalancercontrollerEACBAB2B",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/chart-nginx-ingress/Resource/Default"
   }
  },
  "testuseast1blueprintappmeshcontrollerConditionJsonC0647CA9": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "{\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":aud\":\"sts.amazonaws.com\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":sub\":\"system:serviceaccount:appmesh-system:appmesh-controller\"}"
      ]
     ]
    }
   },
   "DependsOn": [
    "appmeshsystemnamespacestruct3C9AFC35",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/appmesh-controller/ConditionJson/Resource/Default"
   }
  },
  "testuseast1blueprintappmeshcontrollerRole47103139": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "Fn::GetAtt": [
          "testuseast1blueprintappmeshcontrollerConditionJsonC0647CA9",
          "Value"
         ]
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": {
         "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSCloudMapFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSAppMeshFullAccess"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "appmeshsystemnamespacestruct3C9AFC35",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/appmesh-controller/Role/Resource"
   }
  },
  "testuseast1blueprintappmeshcontrollermanifestappmeshcontrollerServiceAccountResourceA63D678B": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"appmesh-controller\",\"namespace\":\"appmesh-system\",\"labels\":{\"aws.cdk.eks/prune-c8317e23232a66736eb6c091c093fcab6907e526e6\":\"\",\"app.kubernetes.io/name\":\"appmesh-controller\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintappmeshcontrollerRole47103139",
         "Arn"
        ]
       },
       "\"}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8317e23232a66736eb6c091c093fcab6907e526e6"
   },
   "DependsOn": [
    "appmeshsystemnamespacestruct3C9AFC35",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/appmesh-controller/manifest-appmesh-controllerServiceAccountResource/Resource/Default"
   }
  },
  "testuseast1blueprintchartappmeshcontroller8A608DA7": {
   "Type": "Custom::AWSCDK-EKS-HelmChart",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "Release": "appmesh-release",
    "Chart": "appmesh-controller",
    "Version": "1.11.0",
    "Values": "{\"region\":\"us-east-1\",\"serviceAccount\":{\"create\":false,\"name\":\"appmesh-controller\"},\"tracing\":{\"enabled\":true,\"provider\":\"x-ray\"}}",
    "Namespace": "appmesh-system",
    "Repository": "https://aws.github.io/eks-charts",
    "CreateNamespace": true
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintappmeshcontrollerConditionJsonC0647CA9",
    "testuseast1blueprintappmeshcontrollermanifestappmeshcontrollerServiceAccountResourceA63D678B",
    "testuseast1blueprintappmeshcontrollerRole47103139",
    "testuseast1blueprintchartawsloadbalancercontrollerEACBAB2B",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/chart-appmesh-controller/Resource/Default"
   }
  },
  "testuseast1blueprintchartcalicooperatorC4FB06C8": {
   "Type": "Custom::AWSCDK-EKS-HelmChart",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "Release": "bp-addon-calico-operator",
    "Chart": "tigera-operator",
    "Version": "v3.25.1",
    "Values": "{}",
    "Namespace": "calico-operator",
    "Repository": "https://projectcalico.docs.tigera.io/charts",
    "CreateNamespace": true
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/chart-calico-operator/Resource/Default"
   }
  },
  "testuseast1blueprintchartmetricsserver6F0F2F26": {
   "Type": "Custom::AWSCDK-EKS-HelmChart",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "Release": "blueprints-addon-metrics-server",
    "Chart": "metrics-server",
    "Version": "3.10.0",
    "Values": "{}",
    "Namespace": "kube-system",
    "Repository": "https://kubernetes-sigs.github.io/metrics-server",
    "CreateNamespace": true
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/chart-metrics-server/Resource/Default"
   }
  },
  "testuseast1blueprintblueprintsaddonclusterautoscalermanagedpolicy13CB4C59": {
   "Type": "AWS::IAM::ManagedPolicy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "autoscaling:DescribeAutoScalingGroups",
        "autoscaling:DescribeAutoScalingInstances",
        "autoscaling:DescribeLaunchConfigurations",
        "autoscaling:DescribeTags",
        "autoscaling:SetDesiredCapacity",
        "autoscaling:TerminateInstanceInAutoScalingGroup",
        "ec2:DescribeLaunchTemplateVersions",
        "ec2:DescribeInstanceTypes"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "",
    "Path": "/"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/blueprints-addon-cluster-autoscaler-managed-policy/Resource"
   }
  },
  "testuseast1blueprintblueprintsaddonclusterautoscalersaConditionJsonBBCF6BA9": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "{\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":aud\":\"sts.amazonaws.com\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":sub\":\"system:serviceaccount:kube-system:blueprints-addon-cluster-autoscaler\"}"
      ]
     ]
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/blueprints-addon-cluster-autoscaler-sa/ConditionJson/Resource/Default"
   }
  },
  "testuseast1blueprintblueprintsaddonclusterautoscalersaRoleE0D4CD92": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "Fn::GetAtt": [
          "testuseast1blueprintblueprintsaddonclusterautoscalersaConditionJsonBBCF6BA9",
          "Value"
         ]
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": {
         "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Ref": "testuseast1blueprintblueprintsaddonclusterautoscalermanagedpolicy13CB4C59"
     }
    ]
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/blueprints-addon-cluster-autoscaler-sa/Role/Resource"
   }
  },
  "testuseast1blueprintblueprintsaddonclusterautoscalersamanifestblueprintsaddonclusterautoscalersaServiceAccountResourceA9E0C78D": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"blueprints-addon-cluster-autoscaler\",\"namespace\":\"kube-system\",\"labels\":{\"aws.cdk.eks/prune-c8bbfe29922299e096a1469b24078b77d1b8795c1a\":\"\",\"app.kubernetes.io/name\":\"blueprints-addon-cluster-autoscaler\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintblueprintsaddonclusterautoscalersaRoleE0D4CD92",
         "Arn"
        ]
       },
       "\"}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8bbfe29922299e096a1469b24078b77d1b8795c1a"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/blueprints-addon-cluster-autoscaler-sa/manifest-blueprints-addon-cluster-autoscaler-saServiceAccountResource/Resource/Default"
   }
  },
  "testuseast1blueprintchartclusterautoscalerAAE37AAA": {
   "Type": "Custom::AWSCDK-EKS-HelmChart",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "Release": "blueprints-addon-cluster-autoscaler",
    "Chart": "cluster-autoscaler",
    "Values": {
     "Fn::Join": [
      "",
      [
       "{\"cloudProvider\":\"aws\",\"autoDiscovery\":{\"clusterName\":\"",
       {
        "Ref": "testuseast1blueprint5D701BC1"
       },
       "\"},\"awsRegion\":\"us-east-1\",\"rbac\":{\"serviceAccount\":{\"create\":false,\"name\":\"blueprints-addon-cluster-autoscaler\"}}}"
      ]
     ]
    },
    "Namespace": "kube-system",
    "Repository": "https://kubernetes.github.io/autoscaler"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintblueprintsaddonclusterautoscalersaConditionJsonBBCF6BA9",
    "testuseast1blueprintblueprintsaddonclusterautoscalersamanifestblueprintsaddonclusterautoscalersaServiceAccountResourceA9E0C78D",
    "testuseast1blueprintblueprintsaddonclusterautoscalersaRoleE0D4CD92",
    "testuseast1blueprintchartawsloadbalancercontrollerEACBAB2B",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/chart-cluster-autoscaler/Resource/Default"
   }
  },
  "testuseast1blueprintadotcollectorcloudwatch04D07823": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"opentelemetry.io/v1alpha1\",\"kind\":\"OpenTelemetryCollector\",\"metadata\":{\"name\":\"otel-collector-cloudwatch\",\"namespace\":\"default\",\"labels\":{\"aws.cdk.eks/prune-c85d31bcd31a7829a427e2f71f999b41c2a7085c58\":\"\"}},\"spec\":{\"mode\":\"deployment\",\"serviceAccount\":\"adot-collector\",\"podAnnotations\":{\"prometheus.io/scrape\":\"true\",\"prometheus.io/port\":\"8888\"},\"env\":[{\"name\":\"CLUSTER_NAME\",\"value\":\"",
       {
        "Ref": "testuseast1blueprint5D701BC1"
       },
       "\"}],\"config\":\"receivers:\\n  #\\n  # Scrape configuration for the Prometheus Receiver\\n  # This is the same configuration used when Prometheus is installed using the community Helm chart\\n  # \\n  prometheus:\\n    config:\\n      global:\\n        scrape_interval: 15s\\n        scrape_timeout: 10s\\n\\n      scrape_configs:\\n      - job_name: kubernetes-apiservers\\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n        kubernetes_sd_configs:\\n        - role: endpoints\\n        relabel_configs:\\n        - action: keep\\n          regex: default;kubernetes;https\\n          source_labels:\\n          - __meta_kubernetes_namespace\\n          - __meta_kubernetes_service_name\\n          - __meta_kubernetes_endpoint_port_name\\n        scheme: https\\n        tls_config:\\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n          insecure_skip_verify: true\\n\\n      - job_name: kubernetes-nodes\\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n        kubernetes_sd_configs:\\n        - role: node\\n        relabel_configs:\\n        - action: labelmap\\n          regex: __meta_kubernetes_node_label_(.+)\\n        - replacement: kubernetes.default.svc:443\\n          target_label: __address__\\n        - regex: (.+)\\n          replacement: /api/v1/nodes/$$1/proxy/metrics\\n          source_labels:\\n          - __meta_kubernetes_node_name\\n          target_label: __metrics_path__\\n        scheme: https\\n        tls_config:\\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n          insecure_skip_verify: true\\n\\n      - job_name: kubernetes-nodes-cadvisor\\n        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token\\n        kubernetes_sd_configs:\\n        - role: node\\n        relabel_configs:\\n        - action: labelmap\\n          regex: __meta_kubernetes_node_label_(.+)\\n        - replacement: kubernetes.default.svc:443\\n          target_label: __address__\\n        - regex: (.+)\\n          replacement: /api/v1/nodes/$$1/proxy/metrics/cadvisor\\n          source_labels:\\n          - __meta_kubernetes_node_name\\n          target_label: __metrics_path__\\n        scheme: https\\n        tls_config:\\n          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\n          insecure_skip_verify: true\\n\\n      - job_name: kubernetes-service-endpoints\\n        kubernetes_sd_configs:\\n        - role: endpoints\\n        relabel_configs:\\n        - action: keep\\n          regex: true\\n          source_labels:\\n          - __meta_kubernetes_service_annotation_prometheus_io_scrape\\n        - action: replace\\n          regex: (https?)\\n          source_labels:\\n          - __meta_kubernetes_service_annotation_prometheus_io_scheme\\n          target_label: __scheme__\\n        - action: replace\\n          regex: (.+)\\n          source_labels:\\n          - __meta_kubernetes_service_annotation_prometheus_io_path\\n          target_label: __metrics_path__\\n        - action: replace\\n          regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n          replacement: $$1:$$2\\n          source_labels:\\n          - __address__\\n          - __meta_kubernetes_service_annotation_prometheus_io_port\\n          target_label: __address__\\n        - action: labelmap\\n          regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)\\n          replacement: __param_$$1\\n        - action: labelmap\\n          regex: __meta_kubernetes_service_label_(.+)\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_namespace\\n          target_label: kubernetes_namespace\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_service_name\\n          target_label: kubernetes_name\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_pod_node_name\\n          target_label: kubernetes_node\\n\\n      - job_name: kubernetes-service-endpoints-slow\\n        kubernetes_sd_configs:\\n        - role: endpoints\\n        relabel_configs:\\n        - action: keep\\n          regex: true\\n          source_labels:\\n          - __meta_kubernetes_service_annotation_prometheus_io_scrape_slow\\n        - action: replace\\n          regex: (https?)\\n          source_labels:\\n          - __meta_kubernetes_service_annotation_prometheus_io_scheme\\n          target_label: __scheme__\\n        - action: replace\\n          regex: (.+)\\n          source_labels:\\n          - __meta_kubernetes_service_annotation_prometheus_io_path\\n          target_label: __metrics_path__\\n        - action: replace\\n          regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n          replacement: $$1:$$2\\n          source_labels:\\n          - __address__\\n          - __meta_kubernetes_service_annotation_prometheus_io_port\\n          target_label: __address__\\n        - action: labelmap\\n          regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)\\n          replacement: __param_$$1\\n        - action: labelmap\\n          regex: __meta_kubernetes_service_label_(.+)\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_namespace\\n          target_label: kubernetes_namespace\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_service_name\\n          target_label: kubernetes_name\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_pod_node_name\\n          target_label: kubernetes_node\\n        scrape_interval: 5m\\n        scrape_timeout: 30s\\n        \\n      - job_name: prometheus-pushgateway\\n        kubernetes_sd_configs:\\n        - role: service\\n        relabel_configs:\\n        - action: keep\\n          regex: pushgateway\\n          source_labels:\\n          - __meta_kubernetes_service_annotation_prometheus_io_probe\\n\\n      - job_name: kubernetes-services\\n        kubernetes_sd_configs:\\n        - role: service\\n        metrics_path: /probe\\n        params:\\n          module:\\n          - http_2xx\\n        relabel_configs:\\n        - action: keep\\n          regex: true\\n          source_labels:\\n          - __meta_kubernetes_service_annotation_prometheus_io_probe\\n        - source_labels:\\n          - __address__\\n          target_label: __param_target\\n        - replacement: blackbox\\n          target_label: __address__\\n        - source_labels:\\n          - __param_target\\n          target_label: instance\\n        - action: labelmap\\n          regex: __meta_kubernetes_service_label_(.+)\\n        - source_labels:\\n          - __meta_kubernetes_namespace\\n          target_label: kubernetes_namespace\\n        - source_labels:\\n          - __meta_kubernetes_service_name\\n          target_label: kubernetes_name\\n\\n      - job_name: kubernetes-pods\\n        kubernetes_sd_configs:\\n        - role: pod\\n        relabel_configs:\\n        - action: keep\\n          regex: true\\n          source_labels:\\n          - __meta_kubernetes_pod_annotation_prometheus_io_scrape\\n        - action: replace\\n          regex: (https?)\\n          source_labels:\\n          - __meta_kubernetes_pod_annotation_prometheus_io_scheme\\n          target_label: __scheme__\\n        - action: replace\\n          regex: (.+)\\n          source_labels:\\n          - __meta_kubernetes_pod_annotation_prometheus_io_path\\n          target_label: __metrics_path__\\n        - action: replace\\n          regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n          replacement: $$1:$$2\\n          source_labels:\\n          - __address__\\n          - __meta_kubernetes_pod_annotation_prometheus_io_port\\n          target_label: __address__\\n        - action: labelmap\\n          regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\\n          replacement: __param_$$1\\n        - action: labelmap\\n          regex: __meta_kubernetes_pod_label_(.+)\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_namespace\\n          target_label: kubernetes_namespace\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_pod_name\\n          target_label: kubernetes_pod_name\\n        - action: drop\\n          regex: Pending|Succeeded|Failed|Completed\\n          source_labels:\\n          - __meta_kubernetes_pod_phase\\n          \\n      - job_name: kubernetes-pods-slow\\n        scrape_interval: 5m\\n        scrape_timeout: 30s          \\n        kubernetes_sd_configs:\\n        - role: pod\\n        relabel_configs:\\n        - action: keep\\n          regex: true\\n          source_labels:\\n          - __meta_kubernetes_pod_annotation_prometheus_io_scrape_slow\\n        - action: replace\\n          regex: (https?)\\n          source_labels:\\n          - __meta_kubernetes_pod_annotation_prometheus_io_scheme\\n          target_label: __scheme__\\n        - action: replace\\n          regex: (.+)\\n          source_labels:\\n          - __meta_kubernetes_pod_annotation_prometheus_io_path\\n          target_label: __metrics_path__\\n        - action: replace\\n          regex: ([^:]+)(?::\\\\d+)?;(\\\\d+)\\n          replacement: $$1:$$2\\n          source_labels:\\n          - __address__\\n          - __meta_kubernetes_pod_annotation_prometheus_io_port\\n          target_label: __address__\\n        - action: labelmap\\n          regex: __meta_kubernetes_pod_annotation_prometheus_io_param_(.+)\\n          replacement: __param_$1\\n        - action: labelmap\\n          regex: __meta_kubernetes_pod_label_(.+)\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_namespace\\n          target_label: namespace\\n        - action: replace\\n          source_labels:\\n          - __meta_kubernetes_pod_name\\n          target_label: pod\\n        - action: drop\\n          regex: Pending|Succeeded|Failed|Completed\\n          source_labels:\\n          - __meta_kubernetes_pod_phase   \\n\\n      - job_name: otel\\n        kubernetes_sd_configs:\\n          - role: pod\\n        relabel_configs:\\n          - action: replace\\n            regex: ([^:]+)(?::\\\\d+)?\\n            replacement: 8077{1}:8888\\n            source_labels: [__address__]\\n            target_label: __address__\\n          - action: replace\\n            source_labels: [__meta_kubernetes_namespace]\\n            target_label: kubernetes_pod_name\\n          - action: replace\\n            source_labels: [__meta_kubernetes_pod_name]\\n            target_label: kubernetes_pod_name\\n          - action: keep\\n            source_labels: [__meta_kubernetes_pod_label_app]\\n            regex: otel\\n\\n      - job_name: custom-metrics\\n        kubernetes_sd_configs:\\n          - role: pod\\n        relabel_configs:\\n          - action: replace\\n            source_labels: [__meta_kubernetes_namespace]\\n            target_label: kubernetes_pod_name\\n          - action: replace\\n            source_labels: [__meta_kubernetes_pod_name]\\n            target_label: kubernetes_pod_name\\n          - action: keep\\n            source_labels: [__meta_kubernetes_pod_label_app]\\n            regex: .*           \\n                                                        \\nprocessors:\\n  batch/metrics:\\n    timeout: 60s\\n  #\\n  # Processor to transform the names of existing labels and/or add new labels to the metrics identified\\n  #   \\n  metricstransform/labelling:\\n    transforms:\\n      - include: .*\\n        match_type: regexp\\n        action: update\\n        operations:\\n          - action: add_label\\n            new_label: EKS_Cluster\\n            new_value: \\\"",
       {
        "Ref": "testuseast1blueprint5D701BC1"
       },
       "\\\"\\n          - action: update_label\\n            label: kubernetes_pod_name\\n            new_label: EKS_PodName\\n          - action: update_label\\n            label: kubernetes_namespace\\n            new_label: EKS_Namespace               \\n\\nexporters:\\n  #\\n  # AWS EMF exporter that sends metrics data as performance log events to Amazon CloudWatch\\n  # Only the metrics that were filtered out by the processors get to this stage of the pipeline\\n  # Under the metric_declarations field, add one or more sets of Amazon CloudWatch dimensions\\n  # Each dimension must alredy exist as a label on the Prometheus metric\\n  # For each set of dimensions, add a list of metrics under the metric_name_selectors field\\n  # Metrics names may be listed explicitly or using regular expressions\\n  # A default list of metrics has been provided\\n  # Data from performance log events will be aggregated by Amazon CloudWatch using these dimensions to create an Amazon CloudWatch custom metric\\n  #    \\n  awsemf:\\n    region: \\\"us-east-1\\\"\\n    namespace: ContainerInsights/Prometheus\\n    log_group_name: '/aws/containerinsights/${CLUSTER_NAME}/prometheus'\\n    resource_to_telemetry_conversion:\\n      enabled: true\\n    dimension_rollup_option: NoDimensionRollup\\n    parse_json_encoded_attr_values: [Sources, kubernetes]\\n    metric_declarations:\\n      - dimensions: [[EKS_Cluster], [EKS_Namespace], [EKS_PodName]]\\n        metric_name_selectors: apiserver_request_.*,container_memory_.*,container_threads,otelcol_process_.*\\n\\nservice:\\n  pipelines:\\n    metrics:\\n      receivers: [prometheus]\\n      processors: [batch/metrics,metricstransform/labelling]\\n      exporters: [awsemf]         \\n\"}},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"name\":\"otel-prometheus-role\",\"namespace\":\"default\",\"labels\":{\"aws.cdk.eks/prune-c85d31bcd31a7829a427e2f71f999b41c2a7085c58\":\"\"}},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"nodes/proxy\",\"services\",\"endpoints\",\"pods\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"apiGroups\":[\"extensions\"],\"resources\":[\"ingresses\"],\"verbs\":[\"get\",\"list\",\"watch\"]},{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]}]},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"name\":\"otel-prometheus-role-binding\",\"namespace\":\"default\",\"labels\":{\"aws.cdk.eks/prune-c85d31bcd31a7829a427e2f71f999b41c2a7085c58\":\"\"}},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"otel-prometheus-role\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"adot-collector\",\"namespace\":\"default\"}]}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c85d31bcd31a7829a427e2f71f999b41c2a7085c58",
    "Overwrite": true
   },
   "DependsOn": [
    "adotaddOn",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintchartawsloadbalancercontrollerEACBAB2B",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/adot-collector-cloudwatch/Resource/Default"
   }
  },
  "testuseast1blueprintxrayaccountConditionJsonAE6957D0": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "{\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":aud\":\"sts.amazonaws.com\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":sub\":\"system:serviceaccount:xray-system:xray-account\"}"
      ]
     ]
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "xraysystemnamespacestruct92DD4253"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/xray-account/ConditionJson/Resource/Default"
   }
  },
  "testuseast1blueprintxrayaccountRole663ED1E4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "Fn::GetAtt": [
          "testuseast1blueprintxrayaccountConditionJsonAE6957D0",
          "Value"
         ]
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": {
         "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
        }
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSXRayDaemonWriteAccess"
       ]
      ]
     }
    ]
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "xraysystemnamespacestruct92DD4253"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/xray-account/Role/Resource"
   }
  },
  "testuseast1blueprintxrayaccountmanifestxrayaccountServiceAccountResource57492083": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"xray-account\",\"namespace\":\"xray-system\",\"labels\":{\"aws.cdk.eks/prune-c8c11f44f9710d8481889f020475f9280afd8bc0ac\":\"\",\"app.kubernetes.io/name\":\"xray-account\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintxrayaccountRole663ED1E4",
         "Arn"
        ]
       },
       "\"}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8c11f44f9710d8481889f020475f9280afd8bc0ac"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1",
    "xraysystemnamespacestruct92DD4253"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/xray-account/manifest-xray-accountServiceAccountResource/Resource/Default"
   }
  },
  "testuseast1blueprintargocdserverConditionJsonA4AA0FF3": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "{\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":aud\":\"sts.amazonaws.com\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":sub\":\"system:serviceaccount:argocd:argocd-server\"}"
      ]
     ]
    }
   },
   "DependsOn": [
    "argocdnamespacestruct05557081",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/argo-cd-server/ConditionJson/Resource/Default"
   }
  },
  "testuseast1blueprintargocdserverRoleF3924E01": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "Fn::GetAtt": [
          "testuseast1blueprintargocdserverConditionJsonA4AA0FF3",
          "Value"
         ]
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": {
         "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "DependsOn": [
    "argocdnamespacestruct05557081",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/argo-cd-server/Role/Resource"
   }
  },
  "testuseast1blueprintargocdserverRoleDefaultPolicy4F0774C3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "secretsmanager:GetSecretValue",
        "secretsmanager:DescribeSecret"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::Join": [
         "",
         [
          "arn:",
          {
           "Ref": "AWS::Partition"
          },
          ":secretsmanager:us-east-1:643824552215:secret:github-ssh-key-??????"
         ]
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "testuseast1blueprintargocdserverRoleDefaultPolicy4F0774C3",
    "Roles": [
     {
      "Ref": "testuseast1blueprintargocdserverRoleF3924E01"
     }
    ]
   },
   "DependsOn": [
    "argocdnamespacestruct05557081",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/argo-cd-server/Role/DefaultPolicy/Resource"
   }
  },
  "testuseast1blueprintargocdservermanifestargocdserverServiceAccountResourceA37EA863": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"argocd-server\",\"namespace\":\"argocd\",\"labels\":{\"aws.cdk.eks/prune-c8fe18de232e344c1f8e95bbf93830dcdec4589415\":\"\",\"app.kubernetes.io/name\":\"argocd-server\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintargocdserverRoleF3924E01",
         "Arn"
        ]
       },
       "\"}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8fe18de232e344c1f8e95bbf93830dcdec4589415"
   },
   "DependsOn": [
    "argocdnamespacestruct05557081",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/argo-cd-server/manifest-argo-cd-serverServiceAccountResource/Resource/Default"
   }
  },
  "testuseast1blueprintchartargocdaddon6D387E75": {
   "Type": "Custom::AWSCDK-EKS-HelmChart",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "Release": "blueprints-addon-argocd",
    "Chart": "argo-cd",
    "Version": "4.10.9",
    "Values": "{\"server\":{\"serviceAccount\":{\"create\":false},\"volumes\":[{\"name\":\"blueprints-secret-inline\",\"csi\":{\"driver\":\"secrets-store.csi.k8s.io\",\"readOnly\":true,\"volumeAttributes\":{\"secretProviderClass\":\"blueprints-secret\"}}}],\"volumeMounts\":[{\"name\":\"blueprints-secret-inline\",\"mountPath\":\"/mnt/secret-store\"}],\"additionalProjects\":[{\"name\":\"ecsdemo-frontend\",\"namespace\":\"argocd\",\"destinations\":[{\"namespace\":\"ecsdemo-frontend\",\"server\":\"https://kubernetes.default.svc\"}],\"sourceRepos\":[\"git@github.com:aws-containers/ecsdemo-frontend.git\",\"git@github.com:aws-samples/eks-blueprints-workloads.git\"]},{\"name\":\"ecsdemo-nodejs\",\"namespace\":\"argocd\",\"destinations\":[{\"namespace\":\"ecsdemo-nodejs\",\"server\":\"https://kubernetes.default.svc\"}],\"sourceRepos\":[\"git@github.com:aws-containers/ecsdemo-nodejs.git\",\"git@github.com:aws-samples/eks-blueprints-workloads.git\"]},{\"name\":\"ecsdemo-crystal\",\"namespace\":\"argocd\",\"destinations\":[{\"namespace\":\"ecsdemo-crystal\",\"server\":\"https://kubernetes.default.svc\"}],\"sourceRepos\":[\"git@github.com:aws-containers/ecsdemo-crystal.git\",\"git@github.com:aws-samples/eks-blueprints-workloads.git\"]}]},\"configs\":{\"repositories\":{\"bootstrap\":{\"url\":\"git@github.com:aws-samples/eks-blueprints-workloads.git\"}}}}",
    "Namespace": "argocd",
    "Repository": "https://argoproj.github.io/argo-helm",
    "CreateNamespace": true
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintargocdserverConditionJsonA4AA0FF3",
    "testuseast1blueprintargocdservermanifestargocdserverServiceAccountResourceA37EA863",
    "testuseast1blueprintargocdserverRoleDefaultPolicy4F0774C3",
    "testuseast1blueprintargocdserverRoleF3924E01",
    "testuseast1blueprintchartawsloadbalancercontrollerEACBAB2B",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1",
    "testuseast1blueprintmanifestblueprintssecret9A376204"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/chart-argocd-addon/Resource/Default"
   }
  },
  "testuseast1blueprintmanifestblueprintssecret9A376204": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"secrets-store.csi.x-k8s.io/v1alpha1\",\"kind\":\"SecretProviderClass\",\"metadata\":{\"name\":\"blueprints-secret\",\"namespace\":\"argocd\",\"labels\":{\"aws.cdk.eks/prune-c8fbfba48e84c817564ecb2134cb64569e19e224b8\":\"\"}},\"spec\":{\"provider\":\"aws\",\"parameters\":{\"objects\":\"[{\\\"objectName\\\":\\\"github-ssh-key\\\",\\\"objectType\\\":\\\"secretsmanager\\\",\\\"jmesPath\\\":[{\\\"path\\\":\\\"url\\\",\\\"objectAlias\\\":\\\"url\\\"},{\\\"path\\\":\\\"sshPrivateKey\\\",\\\"objectAlias\\\":\\\"sshPrivateKey\\\"}]}]\"},\"secretObjects\":[{\"secretName\":\"github-ssh-key\",\"type\":\"Opaque\",\"labels\":{\"argocd.argoproj.io/secret-type\":\"repo-creds\"},\"data\":[{\"objectName\":\"url\",\"key\":\"url\"},{\"objectName\":\"sshPrivateKey\",\"key\":\"sshPrivateKey\"}]}]}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8fbfba48e84c817564ecb2134cb64569e19e224b8"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintargocdserverConditionJsonA4AA0FF3",
    "testuseast1blueprintargocdservermanifestargocdserverServiceAccountResourceA37EA863",
    "testuseast1blueprintargocdserverRoleDefaultPolicy4F0774C3",
    "testuseast1blueprintargocdserverRoleF3924E01",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1",
    "testuseast1blueprintmanifestSecretsStoreCsiDriverProviderAws25025888"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/manifest-blueprints-secret/Resource/Default"
   }
  },
  "testuseast1blueprintfrontendtestserviceaccountConditionJson837255E5": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "{\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":aud\":\"sts.amazonaws.com\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":sub\":\"system:serviceaccount:ecsdemo-frontend:frontend-test-sa\"}"
      ]
     ]
    }
   },
   "DependsOn": [
    "frontendtest1A1FA418",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/frontend-test-service-account/ConditionJson/Resource/Default"
   }
  },
  "testuseast1blueprintfrontendtestserviceaccountRole82991B95": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "Fn::GetAtt": [
          "testuseast1blueprintfrontendtestserviceaccountConditionJson837255E5",
          "Value"
         ]
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": {
         "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "DependsOn": [
    "frontendtest1A1FA418",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/frontend-test-service-account/Role/Resource"
   }
  },
  "testuseast1blueprintfrontendtestserviceaccountmanifestfrontendtestserviceaccountServiceAccountResourceD214FE20": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"frontend-test-sa\",\"namespace\":\"ecsdemo-frontend\",\"labels\":{\"aws.cdk.eks/prune-c81466997280055863c2ab964991695c96aed178aa\":\"\",\"app.kubernetes.io/name\":\"frontend-test-sa\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintfrontendtestserviceaccountRole82991B95",
         "Arn"
        ]
       },
       "\"}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c81466997280055863c2ab964991695c96aed178aa"
   },
   "DependsOn": [
    "frontendtest1A1FA418",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/frontend-test-service-account/manifest-frontend-test-service-accountServiceAccountResource/Resource/Default"
   }
  },
  "testuseast1blueprintbackendnodejstestserviceaccountConditionJsonA5ADFAFB": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "{\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":aud\":\"sts.amazonaws.com\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":sub\":\"system:serviceaccount:ecsdemo-nodejs:backend-nodejs-test-sa\"}"
      ]
     ]
    }
   },
   "DependsOn": [
    "backendnodejstest0E0EDA79",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/backend-nodejs-test-service-account/ConditionJson/Resource/Default"
   }
  },
  "testuseast1blueprintbackendnodejstestserviceaccountRole55751177": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "Fn::GetAtt": [
          "testuseast1blueprintbackendnodejstestserviceaccountConditionJsonA5ADFAFB",
          "Value"
         ]
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": {
         "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "DependsOn": [
    "backendnodejstest0E0EDA79",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/backend-nodejs-test-service-account/Role/Resource"
   }
  },
  "testuseast1blueprintbackendnodejstestserviceaccountmanifestbackendnodejstestserviceaccountServiceAccountResource8A68287A": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"backend-nodejs-test-sa\",\"namespace\":\"ecsdemo-nodejs\",\"labels\":{\"aws.cdk.eks/prune-c879ca6a8b990e87bbe80dbaa7d377ca0fb559844d\":\"\",\"app.kubernetes.io/name\":\"backend-nodejs-test-sa\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintbackendnodejstestserviceaccountRole55751177",
         "Arn"
        ]
       },
       "\"}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c879ca6a8b990e87bbe80dbaa7d377ca0fb559844d"
   },
   "DependsOn": [
    "backendnodejstest0E0EDA79",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/backend-nodejs-test-service-account/manifest-backend-nodejs-test-service-accountServiceAccountResource/Resource/Default"
   }
  },
  "testuseast1blueprintbackendcrystaltestserviceaccountConditionJson853670A4": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "{\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":aud\":\"sts.amazonaws.com\",\"",
       {
        "Fn::Select": [
         1,
         {
          "Fn::Split": [
           ":oidc-provider/",
           {
            "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
           }
          ]
         }
        ]
       },
       ":sub\":\"system:serviceaccount:ecsdemo-crystal:backend-crystal-test-sa\"}"
      ]
     ]
    }
   },
   "DependsOn": [
    "backendcrystaltest36BD2C90",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/backend-crystal-test-service-account/ConditionJson/Resource/Default"
   }
  },
  "testuseast1blueprintbackendcrystaltestserviceaccountRole90A0A8B7": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRoleWithWebIdentity",
       "Condition": {
        "StringEquals": {
         "Fn::GetAtt": [
          "testuseast1blueprintbackendcrystaltestserviceaccountConditionJson853670A4",
          "Value"
         ]
        }
       },
       "Effect": "Allow",
       "Principal": {
        "Federated": {
         "Ref": "testuseast1blueprintOpenIdConnectProviderDBAEF7AF"
        }
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "DependsOn": [
    "backendcrystaltest36BD2C90",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/backend-crystal-test-service-account/Role/Resource"
   }
  },
  "testuseast1blueprintbackendcrystaltestserviceaccountmanifestbackendcrystaltestserviceaccountServiceAccountResource264F5D4E": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"v1\",\"kind\":\"ServiceAccount\",\"metadata\":{\"name\":\"backend-crystal-test-sa\",\"namespace\":\"ecsdemo-crystal\",\"labels\":{\"aws.cdk.eks/prune-c88f81513a794a172b6758c7663eb034a75d90e9cf\":\"\",\"app.kubernetes.io/name\":\"backend-crystal-test-sa\"},\"annotations\":{\"eks.amazonaws.com/role-arn\":\"",
       {
        "Fn::GetAtt": [
         "testuseast1blueprintbackendcrystaltestserviceaccountRole90A0A8B7",
         "Arn"
        ]
       },
       "\"}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c88f81513a794a172b6758c7663eb034a75d90e9cf"
   },
   "DependsOn": [
    "backendcrystaltest36BD2C90",
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/backend-crystal-test-service-account/manifest-backend-crystal-test-service-accountServiceAccountResource/Resource/Default"
   }
  },
  "testuseast1blueprintmanifestbootstrapappsA8088E4A": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": {
     "Fn::Join": [
      "",
      [
       "[{\"apiVersion\":\"argoproj.io/v1alpha1\",\"kind\":\"Application\",\"metadata\":{\"name\":\"bootstrap-apps\",\"namespace\":\"argocd\",\"annotations\":{\"argocd.argoproj.io/sync-wave\":\"0\"},\"labels\":{\"aws.cdk.eks/prune-c8b4e2b491b5a5c5e4a126eceb37b0e6b367bedfff\":\"\"}},\"spec\":{\"destination\":{\"namespace\":\"argocd\",\"server\":\"https://kubernetes.default.svc\"},\"project\":\"default\",\"source\":{\"helm\":{\"valueFiles\":[\"values.yaml\"],\"parameters\":[{\"name\":\"clusterName\",\"value\":\"",
       {
        "Ref": "testuseast1blueprint5D701BC1"
       },
       "\"},{\"name\":\"region\",\"value\":\"us-east-1\"},{\"name\":\"repoUrl\",\"value\":\"git@github.com:aws-samples/eks-blueprints-workloads.git\"},{\"name\":\"targetRevision\",\"value\":\"main\"},{\"name\":\"service.type\",\"value\":\"LoadBalancer\"},{\"name\":\"spec.ingress.host\",\"value\":\"dev.blueprint.com\"}]},\"path\":\"multi-repo/argo-app-of-apps/test\",\"repoURL\":\"git@github.com:aws-samples/eks-blueprints-workloads.git\",\"targetRevision\":\"main\"},\"syncPolicy\":{\"automated\":{\"prune\":true,\"selfHeal\":true,\"allowEmpty\":true}}}}]"
      ]
     ]
    },
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8b4e2b491b5a5c5e4a126eceb37b0e6b367bedfff"
   },
   "DependsOn": [
    "testuseast1blueprintvpcIGW45607E32",
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableEFFA1FB7",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableBB826D04",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableD3A5C5EF",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421",
    "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430",
    "testuseast1blueprintvpcPublicSubnet1DefaultRouteDDCE28A8",
    "testuseast1blueprintvpcPublicSubnet1EIP33ADCC9B",
    "testuseast1blueprintvpcPublicSubnet1NATGatewayA011F999",
    "testuseast1blueprintvpcPublicSubnet1RouteTable92982FBE",
    "testuseast1blueprintvpcPublicSubnet1RouteTableAssociation9C3ADAEA",
    "testuseast1blueprintvpcPublicSubnet1Subnet6C0D91FB",
    "testuseast1blueprintvpcPublicSubnet2DefaultRouteF1468CAD",
    "testuseast1blueprintvpcPublicSubnet2EIP929BC440",
    "testuseast1blueprintvpcPublicSubnet2NATGatewayF9B0A4AD",
    "testuseast1blueprintvpcPublicSubnet2RouteTableBFAE722F",
    "testuseast1blueprintvpcPublicSubnet2RouteTableAssociationE8DFC003",
    "testuseast1blueprintvpcPublicSubnet2Subnet8CC0BDE7",
    "testuseast1blueprintvpcPublicSubnet3DefaultRouteA2CADAF2",
    "testuseast1blueprintvpcPublicSubnet3EIPD22DCE2B",
    "testuseast1blueprintvpcPublicSubnet3NATGatewayF1A8C460",
    "testuseast1blueprintvpcPublicSubnet3RouteTableC40C7FF4",
    "testuseast1blueprintvpcPublicSubnet3RouteTableAssociationFFA1FC37",
    "testuseast1blueprintvpcPublicSubnet3SubnetB8C04ED2",
    "testuseast1blueprintvpcDE5DE960",
    "testuseast1blueprintvpcVPCGW870ACB79",
    "testuseast1blueprintchartargocdaddon6D387E75",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/test-us-east-1-blueprint/manifest-bootstrap-apps/Resource/Default"
   }
  },
  "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.us-east-1.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/cdk-hnb659fds-assets-643824552215-us-east-1/f9aad4f625152a50f0181b7e7f6f20d7d98db6fee9ae967ee474716ece9d5e1f.json"
      ]
     ]
    },
    "Parameters": {
     "referencetoeksblueprintpipelinestacktestuseast1testuseast1blueprintCreationRole0A0DD0C5Arn": {
      "Fn::GetAtt": [
       "testuseast1blueprintCreationRoleBA0F17CF",
       "Arn"
      ]
     }
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStack/@aws-cdk--aws-eks.ClusterResourceProvider.NestedStackResource",
    "aws:asset:path": "eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksClusterResourceProviderFAFBC230.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
   "Type": "AWS::CloudFormation::Stack",
   "Properties": {
    "TemplateURL": {
     "Fn::Join": [
      "",
      [
       "https://s3.us-east-1.",
       {
        "Ref": "AWS::URLSuffix"
       },
       "/cdk-hnb659fds-assets-643824552215-us-east-1/5e7b55f85a2e9a5c8df0077ae66e2d94f487dd403c1f53296f311a570272817d.json"
      ]
     ]
    },
    "Parameters": {
     "referencetoeksblueprintpipelinestacktestuseast1testuseast1blueprint6F4C7684Arn": {
      "Fn::GetAtt": [
       "testuseast1blueprint5D701BC1",
       "Arn"
      ]
     },
     "referencetoeksblueprintpipelinestacktestuseast1testuseast1blueprintCreationRole0A0DD0C5Arn": {
      "Fn::GetAtt": [
       "testuseast1blueprintCreationRoleBA0F17CF",
       "Arn"
      ]
     },
     "referencetoeksblueprintpipelinestacktestuseast1testuseast1blueprintkubectllayer250ABD79D9Ref": {
      "Ref": "kubectllayer2595F4425A"
     },
     "referencetoeksblueprintpipelinestacktestuseast1testuseast1blueprinttestuseast1blueprintvpcPrivateSubnet1Subnet0E4F54E0Ref": {
      "Ref": "testuseast1blueprintvpcPrivateSubnet1Subnet7714913F"
     },
     "referencetoeksblueprintpipelinestacktestuseast1testuseast1blueprinttestuseast1blueprintvpcPrivateSubnet2Subnet29192310Ref": {
      "Ref": "testuseast1blueprintvpcPrivateSubnet2SubnetD2C6A77E"
     },
     "referencetoeksblueprintpipelinestacktestuseast1testuseast1blueprinttestuseast1blueprintvpcPrivateSubnet3Subnet9FE5611FRef": {
      "Ref": "testuseast1blueprintvpcPrivateSubnet3Subnet6B348430"
     },
     "referencetoeksblueprintpipelinestacktestuseast1testuseast1blueprint6F4C7684ClusterSecurityGroupId": {
      "Fn::GetAtt": [
       "testuseast1blueprint5D701BC1",
       "ClusterSecurityGroupId"
      ]
     }
    }
   },
   "DependsOn": [
    "testuseast1blueprintvpcPrivateSubnet1DefaultRoute7F5BEAE8",
    "testuseast1blueprintvpcPrivateSubnet1RouteTableAssociation4AE0316E",
    "testuseast1blueprintvpcPrivateSubnet2DefaultRouteA17E9648",
    "testuseast1blueprintvpcPrivateSubnet2RouteTableAssociation9D4FA226",
    "testuseast1blueprintvpcPrivateSubnet3DefaultRoute7B403BF2",
    "testuseast1blueprintvpcPrivateSubnet3RouteTableAssociationF1EF1421"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/@aws-cdk--aws-eks.KubectlProvider.NestedStack/@aws-cdk--aws-eks.KubectlProvider.NestedStackResource",
    "aws:asset:path": "eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderA0016BA0.nested.template.json",
    "aws:asset:property": "TemplateURL"
   }
  },
  "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Resource": "*",
         "Action": [
          "iam:CreateOpenIDConnectProvider",
          "iam:DeleteOpenIDConnectProvider",
          "iam:UpdateOpenIDConnectProviderThumbprint",
          "iam:AddClientIDToOpenIDConnectProvider",
          "iam:RemoveClientIDFromOpenIDConnectProvider"
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Role"
   }
  },
  "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderHandlerF2C543E0": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-643824552215-us-east-1",
     "S3Key": "48e9fd6cee1d2c5f41da5c382b67d28876e6930ade034bffcfe0739f878fec68.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "CustomAWSCDKOpenIdConnectProviderCustomResourceProviderRole517FED65"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/Custom::AWSCDKOpenIdConnectProviderCustomResourceProvider/Handler",
    "aws:asset:path": "../asset.48e9fd6cee1d2c5f41da5c382b67d28876e6930ade034bffcfe0739f878fec68",
    "aws:asset:property": "Code"
   }
  },
  "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/AWSCDKCfnUtilsProviderCustomResourceProvider/Role"
   }
  },
  "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-643824552215-us-east-1",
     "S3Key": "28739348edff6f1084f6a50d8d934e2d3fc2a3bb77442d8a9a1361d51ccd03c0.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867",
      "Arn"
     ]
    },
    "Runtime": "nodejs16.x"
   },
   "DependsOn": [
    "AWSCDKCfnUtilsProviderCustomResourceProviderRoleFE0EE867"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/AWSCDKCfnUtilsProviderCustomResourceProvider/Handler",
    "aws:asset:path": "../asset.28739348edff6f1084f6a50d8d934e2d3fc2a3bb77442d8a9a1361d51ccd03c0",
    "aws:asset:property": "Code"
   }
  },
  "certmanagernamespacestruct65ED8E81": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"name\":\"cert-manager\",\"labels\":{\"aws.cdk.eks/prune-c8ef597c3d21c16e5b6f4dd94755973cb002d7cdf4\":\"\"}}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8ef597c3d21c16e5b6f4dd94755973cb002d7cdf4",
    "Overwrite": true
   },
   "DependsOn": [
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/cert-manager-namespace-struct/Resource/Default"
   }
  },
  "adotaddonotelPermissionsAC82D5F5": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"labels\":{\"aws.cdk.eks/prune-c8e79ead15af18b85ab48c711bc06d49de4ab10794\":\"\",\"control-plane\":\"controller-manager\"},\"name\":\"opentelemetry-operator-system\"}},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"name\":\"eks:addon-manager-otel\",\"labels\":{\"aws.cdk.eks/prune-c8e79ead15af18b85ab48c711bc06d49de4ab10794\":\"\"}},\"rules\":[{\"apiGroups\":[\"apiextensions.k8s.io\"],\"resources\":[\"customresourcedefinitions\"],\"resourceNames\":[\"opentelemetrycollectors.opentelemetry.io\",\"instrumentations.opentelemetry.io\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"resourceNames\":[\"opentelemetry-operator-system\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"clusterroles\"],\"resourceNames\":[\"opentelemetry-operator-manager-role\",\"opentelemetry-operator-metrics-reader\",\"opentelemetry-operator-proxy-role\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"clusterrolebindings\"],\"resourceNames\":[\"opentelemetry-operator-manager-rolebinding\",\"opentelemetry-operator-proxy-rolebinding\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"admissionregistration.k8s.io\"],\"resources\":[\"mutatingwebhookconfigurations\",\"validatingwebhookconfigurations\"],\"resourceNames\":[\"opentelemetry-operator-mutating-webhook-configuration\",\"opentelemetry-operator-validating-webhook-configuration\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"nonResourceURLs\":[\"/metrics\"],\"verbs\":[\"get\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"namespaces\"],\"verbs\":[\"list\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"serviceaccounts\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"daemonsets\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"replicasets\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"statefulsets\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"autoscaling\"],\"resources\":[\"horizontalpodautoscalers\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"coordination.k8s.io\"],\"resources\":[\"leases\"],\"verbs\":[\"create\",\"get\",\"list\",\"update\"]},{\"apiGroups\":[\"opentelemetry.io\"],\"resources\":[\"opentelemetrycollectors\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"opentelemetry.io\"],\"resources\":[\"opentelemetrycollectors/finalizers\"],\"verbs\":[\"get\",\"patch\",\"update\"]},{\"apiGroups\":[\"opentelemetry.io\"],\"resources\":[\"opentelemetrycollectors/status\"],\"verbs\":[\"get\",\"patch\",\"update\"]},{\"apiGroups\":[\"opentelemetry.io\"],\"resources\":[\"instrumentations\"],\"verbs\":[\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"authentication.k8s.io\"],\"resources\":[\"tokenreviews\"],\"verbs\":[\"create\"]},{\"apiGroups\":[\"authorization.k8s.io\"],\"resources\":[\"subjectaccessreviews\"],\"verbs\":[\"create\"]}]},{\"kind\":\"ClusterRoleBinding\",\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"metadata\":{\"name\":\"eks:addon-manager-otel\",\"labels\":{\"aws.cdk.eks/prune-c8e79ead15af18b85ab48c711bc06d49de4ab10794\":\"\"}},\"subjects\":[{\"kind\":\"User\",\"name\":\"eks:addon-manager\",\"apiGroup\":\"rbac.authorization.k8s.io\"}],\"roleRef\":{\"kind\":\"ClusterRole\",\"name\":\"eks:addon-manager-otel\",\"apiGroup\":\"rbac.authorization.k8s.io\"}},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"name\":\"eks:addon-manager\",\"namespace\":\"opentelemetry-operator-system\",\"labels\":{\"aws.cdk.eks/prune-c8e79ead15af18b85ab48c711bc06d49de4ab10794\":\"\"}},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"serviceaccounts\"],\"resourceNames\":[\"opentelemetry-operator-controller-manager\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"roles\"],\"resourceNames\":[\"opentelemetry-operator-leader-election-role\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"rbac.authorization.k8s.io\"],\"resources\":[\"rolebindings\"],\"resourceNames\":[\"opentelemetry-operator-leader-election-rolebinding\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"services\"],\"resourceNames\":[\"opentelemetry-operator-controller-manager-metrics-service\",\"opentelemetry-operator-webhook-service\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\"],\"resourceNames\":[\"opentelemetry-operator-controller-manager\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"cert-manager.io\"],\"resources\":[\"certificates\",\"issuers\"],\"resourceNames\":[\"opentelemetry-operator-serving-cert\",\"opentelemetry-operator-selfsigned-issuer\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps\"],\"verbs\":[\"create\",\"delete\",\"get\",\"list\",\"patch\",\"update\",\"watch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"configmaps/status\"],\"verbs\":[\"get\",\"update\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"events\"],\"verbs\":[\"create\",\"patch\"]},{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"list\"]}]},{\"kind\":\"RoleBinding\",\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"metadata\":{\"name\":\"eks:addon-manager\",\"namespace\":\"opentelemetry-operator-system\",\"labels\":{\"aws.cdk.eks/prune-c8e79ead15af18b85ab48c711bc06d49de4ab10794\":\"\"}},\"subjects\":[{\"kind\":\"User\",\"name\":\"eks:addon-manager\",\"apiGroup\":\"rbac.authorization.k8s.io\"}],\"roleRef\":{\"kind\":\"Role\",\"name\":\"eks:addon-manager\",\"apiGroup\":\"rbac.authorization.k8s.io\"}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8e79ead15af18b85ab48c711bc06d49de4ab10794",
    "Overwrite": true
   },
   "DependsOn": [
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/adot-addon-otelPermissions/Resource/Default"
   }
  },
  "adotaddOn": {
   "Type": "AWS::EKS::Addon",
   "Properties": {
    "AddonName": "adot",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "AddonVersion": "v0.70.0-eksbuild.1",
    "ResolveConflicts": "OVERWRITE",
    "ServiceAccountRoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintadotcollectorsaRole7720C6AD",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "adotaddonotelPermissionsAC82D5F5",
    "testuseast1blueprintadotcollectorsaConditionJson3A0BD841",
    "testuseast1blueprintadotcollectorsamanifestadotcollectorsaServiceAccountResourceEFCBCBDD",
    "testuseast1blueprintadotcollectorsaRole7720C6AD",
    "testuseast1blueprintchartawsloadbalancercontrollerEACBAB2B",
    "testuseast1blueprintchartblueprintscertmanageraddon72B0828E"
   ],
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/adot-addOn"
   }
  },
  "appmeshsystemnamespacestruct3C9AFC35": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"name\":\"appmesh-system\",\"labels\":{\"aws.cdk.eks/prune-c8417fd363d9706d32b0e40e46185ec7c7f3461383\":\"\"}}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8417fd363d9706d32b0e40e46185ec7c7f3461383",
    "Overwrite": true
   },
   "DependsOn": [
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/appmesh-system-namespace-struct/Resource/Default"
   }
  },
  "clusterNameB220FB68": {
   "Type": "Custom::AWSCDKCfnJson",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "AWSCDKCfnUtilsProviderCustomResourceProviderHandlerCF82AA57",
      "Arn"
     ]
    },
    "Value": {
     "Fn::Join": [
      "",
      [
       "\"",
       {
        "Ref": "testuseast1blueprint5D701BC1"
       },
       "\""
      ]
     ]
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/clusterName/Resource/Default"
   }
  },
  "xraysystemnamespacestruct92DD4253": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"name\":\"xray-system\",\"labels\":{\"aws.cdk.eks/prune-c8d253e8123ade80f26127b2a2095c5ec254439743\":\"\"}}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8d253e8123ade80f26127b2a2095c5ec254439743",
    "Overwrite": true
   },
   "DependsOn": [
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/xray-system-namespace-struct/Resource/Default"
   }
  },
  "xraydaemon34B4B4B6": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"rbac.authorization.k8s.io/v1beta1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"name\":\"xray-daemon\",\"labels\":{\"aws.cdk.eks/prune-c8b5f1772d888eb6cc35138e744ffdb18d25ab03f4\":\"\",\"app\":\"xray-daemon\"}},\"roleRef\":{\"apiGroup\":\"rbac.authorization.k8s.io\",\"kind\":\"ClusterRole\",\"name\":\"cluster-admin\"},\"subjects\":[{\"kind\":\"ServiceAccount\",\"name\":\"xray-account\",\"namespace\":\"xray-system\"}]},{\"apiVersion\":\"apps/v1\",\"kind\":\"DaemonSet\",\"metadata\":{\"name\":\"xray-daemon\",\"namespace\":\"xray-system\",\"labels\":{\"aws.cdk.eks/prune-c8b5f1772d888eb6cc35138e744ffdb18d25ab03f4\":\"\"}},\"spec\":{\"updateStrategy\":{\"type\":\"RollingUpdate\"},\"selector\":{\"matchLabels\":{\"app\":\"xray-daemon\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"xray-daemon\"}},\"spec\":{\"volumes\":[{\"name\":\"config-volume\",\"configMap\":{\"name\":\"xray-config\"}}],\"hostNetwork\":true,\"serviceAccountName\":\"xray-account\",\"containers\":[{\"name\":\"xray-daemon\",\"image\":\"trevorrobertsjr/eks-workshop-x-ray-daemon:02d13ce10add55081c68b6b76a19b7dfeea00dad\",\"imagePullPolicy\":\"Always\",\"command\":[\"/usr/bin/xray\",\"-c\",\"/aws/xray/config.yaml\"],\"resources\":{\"limits\":{\"memory\":\"24Mi\"}},\"ports\":[{\"name\":\"xray-ingest\",\"containerPort\":2000,\"hostPort\":2000,\"protocol\":\"UDP\"}],\"volumeMounts\":[{\"name\":\"config-volume\",\"mountPath\":\"/aws/xray\",\"readOnly\":true}]}]}}}},{\"apiVersion\":\"v1\",\"kind\":\"ConfigMap\",\"metadata\":{\"name\":\"xray-config\",\"namespace\":\"xray-system\",\"labels\":{\"aws.cdk.eks/prune-c8b5f1772d888eb6cc35138e744ffdb18d25ab03f4\":\"\"}},\"data\":{\"config.yaml\":\"# Maximum buffer size in MB (minimum 3). Choose 0 to use 1% of host memory.\\nTotalBufferSizeMB: 0\\n# Maximum number of concurrent calls to AWS X-Ray to upload segment documents.\\nConcurrency: 8\\n# Send segments to AWS X-Ray service in a specific region\\nRegion: \\\"\\\"\\n# Change the X-Ray service endpoint to which the daemon sends segment documents.\\nEndpoint: \\\"\\\"\\nSocket:\\n  # Change the address and port on which the daemon listens for UDP packets containing segment documents.\\n  # Make sure we listen on all IP's by default for the k8s setup\\n  UDPAddress: 0.0.0.0:2000\\nLogging:\\n  LogRotation: true\\n  # Change the log level, from most verbose to least: dev, debug, info, warn, error, prod (default).\\n  LogLevel: prod\\n  # Output logs to the specified file path.\\n  LogPath: \\\"\\\"\\n# Turn on local mode to skip EC2 instance metadata check.\\nLocalMode: false\\n# Amazon Resource Name (ARN) of the AWS resource running the daemon.\\nResourceARN: \\\"\\\"\\n# Assume an IAM role to upload segments to a different account.\\nRoleARN: \\\"\\\"\\n# Disable TLS certificate verification.\\nNoVerifySSL: false\\n# Upload segments to AWS X-Ray through a proxy.\\nProxyAddress: \\\"\\\"\\n# Daemon configuration file format version.\\nVersion: 1\"}},{\"apiVersion\":\"v1\",\"kind\":\"Service\",\"metadata\":{\"name\":\"xray-service\",\"namespace\":\"xray-system\",\"labels\":{\"aws.cdk.eks/prune-c8b5f1772d888eb6cc35138e744ffdb18d25ab03f4\":\"\"}},\"spec\":{\"selector\":{\"app\":\"xray-daemon\"},\"clusterIP\":\"None\",\"ports\":[{\"name\":\"incoming\",\"port\":2000,\"protocol\":\"UDP\"}]}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8b5f1772d888eb6cc35138e744ffdb18d25ab03f4",
    "Overwrite": true
   },
   "DependsOn": [
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1",
    "testuseast1blueprintxrayaccountConditionJsonAE6957D0",
    "testuseast1blueprintxrayaccountmanifestxrayaccountServiceAccountResource57492083",
    "testuseast1blueprintxrayaccountRole663ED1E4"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/xray-daemon/Resource/Default"
   }
  },
  "argocdnamespacestruct05557081": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"name\":\"argocd\",\"labels\":{\"aws.cdk.eks/prune-c8622e526c3efdeeb15b754e43a49a4bc246f5c191\":\"\"}}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8622e526c3efdeeb15b754e43a49a4bc246f5c191",
    "Overwrite": true
   },
   "DependsOn": [
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/argocd-namespace-struct/Resource/Default"
   }
  },
  "teamplatformtestAccessRole1A18C529": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::643824552215:user/platform-user"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/team-platform-testAccessRole/Resource"
   }
  },
  "teamplatformtestAccessRoleDefaultPolicy74EC2A13": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "eks:DescribeNodegroup",
        "eks:ListNodegroups",
        "eks:DescribeCluster",
        "eks:ListClusters",
        "eks:AccessKubernetesApi",
        "ssm:GetParameter",
        "eks:ListUpdates",
        "eks:ListFargateProfiles"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "testuseast1blueprint5D701BC1",
         "Arn"
        ]
       }
      },
      {
       "Action": "eks:ListClusters",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "teamplatformtestAccessRoleDefaultPolicy74EC2A13",
    "Roles": [
     {
      "Ref": "teamplatformtestAccessRole1A18C529"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/team-platform-testAccessRole/DefaultPolicy/Resource"
   }
  },
  "ecsdemofrontendAccessRole633CF6FC": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::643824552215:user/frontend-user"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/ecsdemo-frontendAccessRole/Resource"
   }
  },
  "ecsdemofrontendAccessRoleDefaultPolicy5E61D6AD": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "eks:DescribeNodegroup",
        "eks:ListNodegroups",
        "eks:DescribeCluster",
        "eks:ListClusters",
        "eks:AccessKubernetesApi",
        "ssm:GetParameter",
        "eks:ListUpdates",
        "eks:ListFargateProfiles"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "testuseast1blueprint5D701BC1",
         "Arn"
        ]
       }
      },
      {
       "Action": "eks:ListClusters",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ecsdemofrontendAccessRoleDefaultPolicy5E61D6AD",
    "Roles": [
     {
      "Ref": "ecsdemofrontendAccessRole633CF6FC"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/ecsdemo-frontendAccessRole/DefaultPolicy/Resource"
   }
  },
  "frontendtest1A1FA418": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"name\":\"ecsdemo-frontend\",\"labels\":{\"aws.cdk.eks/prune-c8cf7b72c6ef9e1ecfb2bd4e0e86973d8df5d7f686\":\"\"}}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8cf7b72c6ef9e1ecfb2bd4e0e86973d8df5d7f686",
    "Overwrite": true
   },
   "DependsOn": [
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/frontend-test/Resource/Default"
   }
  },
  "ecsdemofrontendrbac0F5CBD76": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"name\":\"ecsdemo-frontend-team-cluster-role\",\"labels\":{\"aws.cdk.eks/prune-c8272092d8f950bf8eef7ee702c6910faae1969c35\":\"\"}},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"namespaces\"],\"verbs\":[\"get\",\"list\"]}]},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"name\":\"ecsdemo-frontend-team-cluster-role-binding\",\"labels\":{\"aws.cdk.eks/prune-c8272092d8f950bf8eef7ee702c6910faae1969c35\":\"\"}},\"subjects\":[{\"kind\":\"Group\",\"name\":\"ecsdemo-frontend-team-group\",\"apiGroup\":\"rbac.authorization.k8s.io\"}],\"roleRef\":{\"kind\":\"ClusterRole\",\"name\":\"ecsdemo-frontend-team-cluster-role\",\"apiGroup\":\"rbac.authorization.k8s.io\"}},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"namespace\":\"ecsdemo-frontend\",\"name\":\"ecsdemo-frontend-team-role\",\"labels\":{\"aws.cdk.eks/prune-c8272092d8f950bf8eef7ee702c6910faae1969c35\":\"\"}},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\",\"daemonsets\",\"statefulsets\",\"replicasets\"],\"verbs\":[\"get\",\"list\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"get\",\"list\"]}]},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"name\":\"ecsdemo-frontend-team-role-binding\",\"namespace\":\"ecsdemo-frontend\",\"labels\":{\"aws.cdk.eks/prune-c8272092d8f950bf8eef7ee702c6910faae1969c35\":\"\"}},\"subjects\":[{\"kind\":\"Group\",\"name\":\"ecsdemo-frontend-team-group\",\"apiGroup\":\"rbac.authorization.k8s.io\"}],\"roleRef\":{\"kind\":\"Role\",\"name\":\"ecsdemo-frontend-team-role\",\"apiGroup\":\"rbac.authorization.k8s.io\"}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8272092d8f950bf8eef7ee702c6910faae1969c35",
    "Overwrite": true
   },
   "DependsOn": [
    "frontendtest1A1FA418",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/ecsdemo-frontend-rbac/Resource/Default"
   }
  },
  "ecsdemonodejsAccessRole83EFDD90": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::643824552215:user/nodejs-user"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/ecsdemo-nodejsAccessRole/Resource"
   }
  },
  "ecsdemonodejsAccessRoleDefaultPolicy6C99DF0D": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "eks:DescribeNodegroup",
        "eks:ListNodegroups",
        "eks:DescribeCluster",
        "eks:ListClusters",
        "eks:AccessKubernetesApi",
        "ssm:GetParameter",
        "eks:ListUpdates",
        "eks:ListFargateProfiles"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "testuseast1blueprint5D701BC1",
         "Arn"
        ]
       }
      },
      {
       "Action": "eks:ListClusters",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ecsdemonodejsAccessRoleDefaultPolicy6C99DF0D",
    "Roles": [
     {
      "Ref": "ecsdemonodejsAccessRole83EFDD90"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/ecsdemo-nodejsAccessRole/DefaultPolicy/Resource"
   }
  },
  "backendnodejstest0E0EDA79": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"name\":\"ecsdemo-nodejs\",\"labels\":{\"aws.cdk.eks/prune-c8a5752f98999d6f45c9790dac0a5753932dbffc10\":\"\"}}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8a5752f98999d6f45c9790dac0a5753932dbffc10",
    "Overwrite": true
   },
   "DependsOn": [
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/backend-nodejs-test/Resource/Default"
   }
  },
  "ecsdemonodejsrbacDB7D2676": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"name\":\"ecsdemo-nodejs-team-cluster-role\",\"labels\":{\"aws.cdk.eks/prune-c8db6ae54ee777d7a969aa120d416ab9eaf02ef7a0\":\"\"}},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"namespaces\"],\"verbs\":[\"get\",\"list\"]}]},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"name\":\"ecsdemo-nodejs-team-cluster-role-binding\",\"labels\":{\"aws.cdk.eks/prune-c8db6ae54ee777d7a969aa120d416ab9eaf02ef7a0\":\"\"}},\"subjects\":[{\"kind\":\"Group\",\"name\":\"ecsdemo-nodejs-team-group\",\"apiGroup\":\"rbac.authorization.k8s.io\"}],\"roleRef\":{\"kind\":\"ClusterRole\",\"name\":\"ecsdemo-nodejs-team-cluster-role\",\"apiGroup\":\"rbac.authorization.k8s.io\"}},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"namespace\":\"ecsdemo-nodejs\",\"name\":\"ecsdemo-nodejs-team-role\",\"labels\":{\"aws.cdk.eks/prune-c8db6ae54ee777d7a969aa120d416ab9eaf02ef7a0\":\"\"}},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\",\"daemonsets\",\"statefulsets\",\"replicasets\"],\"verbs\":[\"get\",\"list\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"get\",\"list\"]}]},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"name\":\"ecsdemo-nodejs-team-role-binding\",\"namespace\":\"ecsdemo-nodejs\",\"labels\":{\"aws.cdk.eks/prune-c8db6ae54ee777d7a969aa120d416ab9eaf02ef7a0\":\"\"}},\"subjects\":[{\"kind\":\"Group\",\"name\":\"ecsdemo-nodejs-team-group\",\"apiGroup\":\"rbac.authorization.k8s.io\"}],\"roleRef\":{\"kind\":\"Role\",\"name\":\"ecsdemo-nodejs-team-role\",\"apiGroup\":\"rbac.authorization.k8s.io\"}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8db6ae54ee777d7a969aa120d416ab9eaf02ef7a0",
    "Overwrite": true
   },
   "DependsOn": [
    "backendnodejstest0E0EDA79",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/ecsdemo-nodejs-rbac/Resource/Default"
   }
  },
  "ecsdemocrystalAccessRoleE9AD0BA8": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "AWS": "arn:aws:iam::643824552215:user/crystal-user"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/ecsdemo-crystalAccessRole/Resource"
   }
  },
  "ecsdemocrystalAccessRoleDefaultPolicyD5923B61": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "eks:DescribeNodegroup",
        "eks:ListNodegroups",
        "eks:DescribeCluster",
        "eks:ListClusters",
        "eks:AccessKubernetesApi",
        "ssm:GetParameter",
        "eks:ListUpdates",
        "eks:ListFargateProfiles"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "testuseast1blueprint5D701BC1",
         "Arn"
        ]
       }
      },
      {
       "Action": "eks:ListClusters",
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "ecsdemocrystalAccessRoleDefaultPolicyD5923B61",
    "Roles": [
     {
      "Ref": "ecsdemocrystalAccessRoleE9AD0BA8"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/ecsdemo-crystalAccessRole/DefaultPolicy/Resource"
   }
  },
  "backendcrystaltest36BD2C90": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"v1\",\"kind\":\"Namespace\",\"metadata\":{\"name\":\"ecsdemo-crystal\",\"labels\":{\"aws.cdk.eks/prune-c872683eb2da838cb6ccd595385a80865c0ea64c61\":\"\"}}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c872683eb2da838cb6ccd595385a80865c0ea64c61",
    "Overwrite": true
   },
   "DependsOn": [
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/backend-crystal-test/Resource/Default"
   }
  },
  "ecsdemocrystalrbac2248AB8E": {
   "Type": "Custom::AWSCDK-EKS-KubernetesResource",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
      "Outputs.eksblueprintpipelinestacktestuseast1testuseast1blueprintawscdkawseksKubectlProviderframeworkonEvent361898DFArn"
     ]
    },
    "Manifest": "[{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRole\",\"metadata\":{\"name\":\"ecsdemo-crystal-team-cluster-role\",\"labels\":{\"aws.cdk.eks/prune-c8fa4fc27028daf1af47539e504ef395d08218b6cb\":\"\"}},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"nodes\",\"namespaces\"],\"verbs\":[\"get\",\"list\"]}]},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"ClusterRoleBinding\",\"metadata\":{\"name\":\"ecsdemo-crystal-team-cluster-role-binding\",\"labels\":{\"aws.cdk.eks/prune-c8fa4fc27028daf1af47539e504ef395d08218b6cb\":\"\"}},\"subjects\":[{\"kind\":\"Group\",\"name\":\"ecsdemo-crystal-team-group\",\"apiGroup\":\"rbac.authorization.k8s.io\"}],\"roleRef\":{\"kind\":\"ClusterRole\",\"name\":\"ecsdemo-crystal-team-cluster-role\",\"apiGroup\":\"rbac.authorization.k8s.io\"}},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"Role\",\"metadata\":{\"namespace\":\"ecsdemo-crystal\",\"name\":\"ecsdemo-crystal-team-role\",\"labels\":{\"aws.cdk.eks/prune-c8fa4fc27028daf1af47539e504ef395d08218b6cb\":\"\"}},\"rules\":[{\"apiGroups\":[\"\"],\"resources\":[\"pods\"],\"verbs\":[\"get\",\"list\"]},{\"apiGroups\":[\"apps\"],\"resources\":[\"deployments\",\"daemonsets\",\"statefulsets\",\"replicasets\"],\"verbs\":[\"get\",\"list\"]},{\"apiGroups\":[\"batch\"],\"resources\":[\"jobs\"],\"verbs\":[\"get\",\"list\"]}]},{\"apiVersion\":\"rbac.authorization.k8s.io/v1\",\"kind\":\"RoleBinding\",\"metadata\":{\"name\":\"ecsdemo-crystal-team-role-binding\",\"namespace\":\"ecsdemo-crystal\",\"labels\":{\"aws.cdk.eks/prune-c8fa4fc27028daf1af47539e504ef395d08218b6cb\":\"\"}},\"subjects\":[{\"kind\":\"Group\",\"name\":\"ecsdemo-crystal-team-group\",\"apiGroup\":\"rbac.authorization.k8s.io\"}],\"roleRef\":{\"kind\":\"Role\",\"name\":\"ecsdemo-crystal-team-role\",\"apiGroup\":\"rbac.authorization.k8s.io\"}}]",
    "ClusterName": {
     "Ref": "testuseast1blueprint5D701BC1"
    },
    "RoleArn": {
     "Fn::GetAtt": [
      "testuseast1blueprintCreationRoleBA0F17CF",
      "Arn"
     ]
    },
    "PruneLabel": "aws.cdk.eks/prune-c8fa4fc27028daf1af47539e504ef395d08218b6cb",
    "Overwrite": true
   },
   "DependsOn": [
    "backendcrystaltest36BD2C90",
    "testuseast1blueprintKubectlReadyBarrierCBEAFCB1"
   ],
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/ecsdemo-crystal-rbac/Resource/Default"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1VSwW7bMAz9lt5pNXPRtce6xtBl2VojGXItZJlNVNtSIEoOAsP/XlpO6vbEx2eaenxkKvq7e7G4kkdKVFUnjS5Fv/FS1cDUa48qFf32oCB/M9sihyKUjVabUBr0IzejtQ0e/8uywZmfuYzIKi29tuazeAS/lsUYnqV/kh6P8gSF0x3DufHSeHSMLwWTknOWeda6b9F42KAKTvvTk7PhEDV8JQaoWxL9CmMDDgPQzaskQk8iGwPn4jGoGv2jJIRGtmUlBRf/lSd0W3Q0iseau+RNIBYF2ZGy4PewCmWUiPRPGv2G5OHZVri7KJmTDbpOK8yUsoE1vxzQLKvcGoPKF852uuK2v7Fp8710cfysqqwZQMtW9Gs7uRtjYXkTcZoz4rflDquZ/0YMA6yRbHAKIc7LW95ps4OcZ7Ht57ex/Rf8EvwhRCF/aNrddB3f/7pIH2Ahbq4eztd0PXmYNKOBSc0mKd8kXXorVhPeprfR3AEMOyTe6br78VOkCz7Id9I6ceyRblGsp/gBzFoAcq0CAAA="
   },
   "Metadata": {
    "aws:cdk:path": "eks-blueprint-pipeline-stack/test-us-east-1/test-us-east-1-blueprint/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "testuseast1blueprintClusterName7E11318B": {
   "Value": {
    "Ref": "testuseast1blueprint5D701BC1"
   }
  },
  "testuseast1blueprintConfigCommand31D29054": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "aws eks update-kubeconfig --name ",
      {
       "Ref": "testuseast1blueprint5D701BC1"
      },
      " --region us-east-1 --role-arn ",
      {
       "Fn::GetAtt": [
        "testuseast1blueprintMastersRoleC7BAAEFF",
        "Arn"
       ]
      }
     ]
    ]
   }
  },
  "testuseast1blueprintGetTokenCommand90FA2319": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "aws eks get-token --cluster-name ",
      {
       "Ref": "testuseast1blueprint5D701BC1"
      },
      " --region us-east-1 --role-arn ",
      {
       "Fn::GetAtt": [
        "testuseast1blueprintMastersRoleC7BAAEFF",
        "Arn"
       ]
      }
     ]
    ]
   }
  },
  "argocdserversecretproviderclass": {
   "Value": "blueprints-secret"
  },
  "platformtestteamadmin": {
   "Value": {
    "Fn::GetAtt": [
     "teamplatformtestAccessRole1A18C529",
     "Arn"
    ]
   }
  },
  "frontendtestteamrole": {
   "Value": {
    "Fn::GetAtt": [
     "ecsdemofrontendAccessRole633CF6FC",
     "Arn"
    ]
   }
  },
  "frontendtestsa": {
   "Value": "frontend-test-sa"
  },
  "backendnodejstestteamrole": {
   "Value": {
    "Fn::GetAtt": [
     "ecsdemonodejsAccessRole83EFDD90",
     "Arn"
    ]
   }
  },
  "backendnodejstestsa": {
   "Value": "backend-nodejs-test-sa"
  },
  "backendcrystaltestteamrole": {
   "Value": {
    "Fn::GetAtt": [
     "ecsdemocrystalAccessRoleE9AD0BA8",
     "Arn"
    ]
   }
  },
  "backendcrystaltestsa": {
   "Value": "backend-crystal-test-sa"
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}